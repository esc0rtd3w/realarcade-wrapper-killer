#!/bin/sh


# GH Game Link Dumper v0.2

# Part of the RealArcade Wrapper Killer

# esc0rtd3w 2018

baseURL="http://www.gamehouse.com/"
baseURLDG="http://www.gamehouse.com/download-games/"
baseURLWeb="http://www.gamehouse.com/#/games/"
baseURLRGSFree="http://games-dl2.real.com/gameconsole/games/demorgses/"
baseURLRGSFull="http://games-dl2.real.com/gameconsole/games/demorgses/"
baseURLRGA1="http://games-dl2.real.com/gameconsole/realarcadev21/games/am-"
baseURLRGA2="http://games-dl2.real.com/gameconsole/realarcadev21/games/am-"
baseURLRGA2Free="http://games-dl2.real.com/gameconsole/realarcadev21/games/amg-"
baseURLRGA3="http://games-dl2.real.com/gameconsole/realarcadev21/games/dip/"
baseURLRGA4="http://games-dl.gamehouse.com/zylom/ghmigration/"
baseURLRFS="http://games-dl.gamehouse.com/gamehouse/pc/"
baseURLRFSAM="http://games-dl.gamehouse.com/gamehouse/pc/"
baseURLRFSAMIndex="http://profiler-cdn.am.gamehouse.com/gamehouse/pc/"
baseURLRFSEXE="http://www.gamehouse.com/game/download/"
baseURLRFSGHWeb="http://www.gamehouse.com/download/ogm/pc/"
baseURLRFSGHIM="http://installer-manager.gamehouse.com/InstallerManager/getinstaller?filename="

inputJSON="games-windows.json"

outputText="games-windows-links.txt"
outputTextCID="games-windows-cid.txt"
outputTextWeb="games-windows-web.txt"

outputHTML="games-windows-links.html"
outputHTMLRGSFree="games-windows-links-rgs-free.html"
outputHTMLRGSFull="games-windows-links-rgs-full.html"
outputHTMLRGA1="games-windows-links-rga-v1.html"
outputHTMLRGA2="games-windows-links-rga-v2.html"
outputHTMLRGA2Free="games-windows-links-rga-v2-free.html"
outputHTMLRGA3="games-windows-links-rga-v3.html"
outputHTMLRGA4="games-windows-links-rga-v4.html"
outputHTMLRFSAM="games-windows-links-rfs-am.html"
outputHTMLRFSRFSIndex="games-windows-links-rfsindex-am.html"
outputHTMLRFSEXE="games-windows-links-rfs-exe.html"
outputHTMLRFSGHWeb="games-windows-links-rfs-gh-web.html"
outputHTMLRFSGHWebIM="games-windows-links-rfs-gh-web-im.html"

outputTMP="dump.tmp"
outputJSON="dump.json"

dumpText="games-windows-dump-list.txt"
dumpTextCID="games-windows-cid-dump-list.txt"

dumpAmiPathName="games-windows-ami-path-names.txt"
dumpIni="games-windows-dump-list.ini"
dumpXML="games-windows-dump-list.xml"

jsonWindows="games-windows.json"
jsonOnline="games-online.json"
jsonAll="games-full.json"


na="NO_DATA"

extRgsFree="_free.rgs"
extRgsFull="_full.rgs"
extRga=".rga"
extRfs=".rfs"

testPage="http://www.gamehouse.com/download-games/experiment"

amiDirBase="C:\\\\ProgramData\\\\activeMARK\\\\instant\\\\apps\\\\"
amiDirName="xxxx-xxxxxxxx-xxxx0000000000000000"

#wgetHeader="--header=\"Cookie: gamehouseuser=true\" --header=\"User-Agent: RealArcade Wrapper Killer v6.0.0\""

# Data Gathering URL
# http://www.gamehouse.com/datagathering/actiontracking?actiontrackingkindid=225&actiontrackingsourceid=4458


setWindowTitle(){

	title='echo -ne "\033]0;realarcade-wrapper-killer/src/scripts/linux/build-links\007"'

	$title

}

removeOldFiles(){

	clear
	echo "Removing Old Files..."
	echo ""
	echo ""

	rm "$outputText"
	rm "$outputTextCID"
	rm "$outputTextWeb"
	rm "$outputHTML"
	rm "$outputHTMLRGSFree"
	rm "$outputHTMLRGSFull"
	rm "$outputHTMLRGA1"
	rm "$outputHTMLRGA2"
	rm "$outputHTMLRGA2Free"
	rm "$outputHTMLRGA3"
	rm "$outputHTMLRGA4"
	rm "$outputHTMLRFSAM"
	rm "$outputHTMLRFSRFSIndex"
	rm "$outputHTMLRFSEXE"
	rm "$outputHTMLRFSGHWeb"
	rm "$dumpIni"
	rm "$dumpText"
	rm "$dumpXML"
	rm "$dumpAmiPathName"
	rm "$outputTextCID"
	rm "$outputHTMLRFSGHWeb"
	rm "$outputHTMLRFSGHWebIM"
	rm "$outputTMP"
	rm "$outputJSON"

}

dumpWebToJSON(){

	clear
	echo "Downloading Games List [games-$1.json]"
	echo ""
	echo ""

	case "$1" in

		"all")
		wget --quiet --header="Cookie: gamehouseuser=true" -O "$jsonAll" "http://www.gamehouse.com/games.json?gametype=null&genre=all&sorting=name&count=10000&filterType=null"
		;;

		"online")
		wget --quiet --header="Cookie: gamehouseuser=true" -O "$jsonOnline" "http://www.gamehouse.com/games.json?gametype=online&genre=all&sorting=name&count=10000&filterType=null"
		;;

		"windows")
		wget --quiet --header="Cookie: gamehouseuser=true"  -O "$jsonWindows" "http://www.gamehouse.com/games.json?gametype=download&genre=all&sorting=name&count=10000&filterType=null"
		;;


	esac

}


dumpGamesToList(){

	removeOldFiles

	clear
	echo "Building Lists From \"$inputJSON\""
	echo ""
	echo ""

	getNameFromJSON=$(grep -Po '"url":.*?[^\\]"' "$inputJSON" | cut -f2 -d":" | cut -c3- | sed 's/"$//' | cut -c16-)
	nameDashes=$(echo "$getNameFromJSON")
	nameNoDashes=$(echo "$getNameFromJSON" | sed -e 's|["'-']||g')

	#grep -Po '"url":.*?[^\\]"' "$inputJSON" | cut -f2 -d":" | cut -c2- | sed 's/"$//'>"$outputTMP"
	#grep -Po '"url":.*?[^\\]"' "$inputJSON" | cut -f2 -d":" | cut -c3- | sed 's/"$//' | cut -c16- > "$outputTMP"

	echo "$getNameFromJSON" > "$outputTMP"

	# Create Files With Links
	while read -r line
	do
		nameDashes=$(echo "$line")
		nameNoDashes=$(echo "$line" | sed -e 's|["'-']||g')
		nameFirstLetter=$(echo "$line" | sed -e "{ s/^\(.\).*/\1/ ; q }")

		# Output Text File
		echo "$baseURLDG$line">>"$outputText"
		echo "$baseURLWeb$line">>"$outputTextWeb"

		## Output HTML Files

		# GameHouse Web Page
		echo "<a href=\"$baseURL$nameDashes\" target=\"__blank\">$baseURL$nameDashes</a><br>">>"$outputHTML"

		# RGS Free
		echo "<a href=\"$baseURLRGSFree$nameNoDashes$extRgsFree\" target=\"__blank\">$baseURLRGSFree$nameNoDashes$extRgsFree</a><br>">>"$outputHTMLRGSFree"

		# RGS Full
		echo "<a href=\"$baseURLRGSFull$nameNoDashes$extRgsFull\" target=\"__blank\">$baseURLRGSFull$nameNoDashes$extRgsFull</a><br>">>"$outputHTMLRGSFull"

		# RGA v1
		echo "<a href=\"$baseURLRGA1$nameNoDashes/am-$nameNoDashes.rga\" target=\"__blank\">$baseURLRGA1$nameNoDashes/am-$nameNoDashes.rga</a><br>">>"$outputHTMLRGA1"

		# RGA v2
		echo "<a href=\"$baseURLRGA2$nameNoDashes/am-$nameNoDashes.rga\" target=\"__blank\">$baseURLRGA2$nameNoDashes/am-$nameNoDashes.rga</a><br>">>"$outputHTMLRGA2"

		# RGA v2 Free
		echo "<a href=\"$baseURLRGA2Free$nameNoDashes/amg-$nameNoDashes.rga\" target=\"__blank\">$baseURLRGA2Free$nameNoDashes/amg-$nameNoDashes.rga</a><br>">>"$outputHTMLRGA2Free"

		# RGA v3
		echo "<a href=\"$baseURLRGA3$nameNoDashes/$nameNoDashes.rga\" target=\"__blank\">$baseURLRGA3$nameNoDashes/$nameNoDashes.rga</a><br>">>"$outputHTMLRGA3"

		# RGA v4
		echo "<a href=\"$baseURLRGA4$nameNoDashes/$nameNoDashes.rga\" target=\"__blank\">$baseURLRGA4$nameNoDashes/$nameNoDashes.rga</a><br>">>"$outputHTMLRGA4"

		# RFS AM
		echo "<a href=\"$baseURLRFSAM$nameFirstLetter/$nameDashes/$nameDashes.rfs\" target=\"__blank\">$baseURLRFSAM$nameFirstLetter/$nameDashes/$nameDashes.rfs</a><br>">>"$outputHTMLRFSAM"

		# RFSIndex AM
		echo "<a href=\"$baseURLRFSAMIndex$nameFirstLetter/$nameDashes/$nameDashes.rfs.0.rfsindex\" target=\"__blank\">$baseURLRFSAMIndex$nameFirstLetter/$nameDashes/$nameDashes.rfs.0.rfsindex</a><br>">>"$outputHTMLRFSRFSIndex"

		# RFS EXE
		echo "<a href=\"$baseURLRFSEXE$nameDashes.exe\" target=\"__blank\">$baseURLRFSEXE$nameDashes.exe</a><br>">>"$outputHTMLRFSEXE"

	done < "$outputTMP"

	rm "$outputTMP"
}


dumpPages(){

	clear
	echo "Initializing Game Info Dump From List..."
	echo ""
	echo ""

	# Reset Game Counter
	gameCounter=0

	# Remove Old Files
	rm "$dumpAmiPathName"
	rm "$dumpText"
	rm "$dumpIni"
	rm "$dumpXML"
	rm "$outputTMP"

	# Write AMI Path Dump Header (Done Once Before Loop)
	echo "; AMI Path List Dumped By The RealArcade Wrapper Killer">"$dumpAmiPathName"
	echo "">>"$dumpAmiPathName"
	echo "">>"$dumpAmiPathName"

	# Write INI Dump Header (Done Once Before Loop)
	echo "; Game List Dumped By The RealArcade Wrapper Killer">"$dumpIni"
	echo "">>"$dumpIni"
	echo "">>"$dumpIni"

	# Get Basic Info From Sample Page
	dumpPageToTemp "$testPage"
	osName=$(readDataLayer "operating_system_name")
	playerID=$(readDataLayer "player_id")
	isLoggedIn=$(readDataLayer "is_logged_in")
	isFunticketSubscriber=$(readDataLayer "is_funticket_subscriber")
	isExFunticketTrialSubscriber=$(readDataLayer "is_ex_funticket_trial_subscriber")
	#isFunticketTriuthlSubscriber=$(readDataLayer "is_funticket_triuthl_subscriber")
	isTakeOverActive=$(readDataLayer "is_take_over_active")
	rm "$outputTMP"

	# Write Text Dump Header (Done Once Before Loop)
	echo "Game List Dumped By The RealArcade Wrapper Killer">"$dumpText"
	echo "">>"$dumpText"
	echo "">>"$dumpText"
	date>>"$dumpText"
	echo "">>"$dumpText"
	echo "osName: $osName">>"$dumpText"
	echo "playerID: $playerID">>"$dumpText"
	echo "isLoggedIn: $isLoggedIn">>"$dumpText"
	echo "isFunticketSubscriber: $isFunticketSubscriber">>"$dumpText"
	echo "isExFunticketTrialSubscriber: $isExFunticketTrialSubscriber">>"$dumpText"
	#echo "isFunticketTriuthlSubscriber: $isFunticketTriuthlSubscriber">>"$dumpText"
	echo "isTakeOverActive: $isTakeOverActive">>"$dumpText"
	echo "">>"$dumpText"
	echo "">>"$dumpText"

	# Write XML Dump Header (Done Once Before Loop)
	echo "<!--Game List Dumped By The RealArcade Wrapper Killer-->">"$dumpXML"
	echo "">>"$dumpXML"
	echo "">>"$dumpXML"
	echo "<dump_root>">>"$dumpXML"
	echo "">>"$dumpXML"

	# Write CID Dump Header (Done Once Before Loop)
	echo "ContentID List Dumped By The RealArcade Wrapper Killer">"$outputTextCID"
	echo "">>"$outputTextCID"
	echo "">>"$outputTextCID"

	# Write Stub Text Header (Done Once Before Loop)
	echo "Game Stub List Dumped By The RealArcade Wrapper Killer">"$outputHTMLRFSGHWebIM"
	echo "">>"$outputHTMLRFSGHWebIM"
	echo "">>"$outputHTMLRFSGHWebIM"


	# Follow Links and Dump Pages
	while read -r line
	do
		# Dump Each Links HTML Source and Parse
		dumpPageToTemp "$line"

		# Get Some Info From Web Page
		contentID=$(readContentID)
		nameDashes=$(readNameDashes)
		nameNoDashes=$(readNameNoDashes)

		# Read from dataLayer array in HTML source
		nameTitle=$(readDataLayer "game_name")
		gamesetName=$(readDataLayer "gameset_name")
		gamesetID=$(readDataLayer "gameset_id")
		gameID=$(readDataLayer "game_id")
		genreName=$(readDataLayer "main_genre_name")
		
		# Remove Unicode chars first (\u2013) then remove backslashes
		# Removing twice as each run replaces one instance
		removeBadChars "unicode"
		removeBadChars "unicode"
		removeBadChars "backslash"
		removeBadChars "backslash"

		gameCounter=$(($gameCounter + 1))

		echo ""	
		echo ""	
		echo "Game Entry #$gameCounter:"		
		echo ""		
		echo "nameTitle: $nameTitle"
		echo "contentID: $contentID"
		echo "gameID: $gameID"
		echo "genreName: $genreName"
		#echo "nameDashes: $nameDashes"
		#echo "nameNoDashes: $nameNoDashes"
		echo "gamesetName: $gamesetName"
		echo "gamesetID: $gamesetID"
		echo ""

		# Additional JSON Parsing and File Outputs
		dumpJsonGHRFS "$line"

		# Append New Data To Files For Each Loop
		createAmiDirName
		writeText
		writeIni
		writeXML

		echo "Done!"	

	done < "$outputText"
	
	# Close XML File Layout After List Is Complete
	echo "</dump_root>">>"$dumpXML"
	
	# Cleanup Files
	rm "$outputTMP"
}


dumpJsonGHRFS(){

	
	#wget --header="Cookie: gamehouseuser=true" --header="User-Agent: RealArcade Wrapper Killer v6.0.0" -O "$outputJSON" "$baseURLRFSGHWeb$nameDashes.json"
	wget --quiet --header="Cookie: gamehouseuser=true" --header="User-Agent: RealArcade Wrapper Killer v6.0.0" -O "$outputJSON" "$baseURLRFSGHWeb$nameDashes.json"

	installerName=$(getinstallerName)
	offeringName=$(getOfferingName)
	channelName=$(getChannelName)
	
	# RFS GH Web
	echo "<a href=\"$baseURLRGA4$nameNoDashes/$installerName\" target=\"__blank\">$baseURLRGA4$nameNoDashes/$installerName</a><br>">>"$outputHTMLRFSGHWeb"
	
	# RFS GH Web Install Manager
	echo "<a href=\"$baseURLRFSGHIM$installerName&offering=$offeringName&channel=$channelName\" target=\"__blank\">Installer_$nameNoDashes.exe</a><br>">>"$outputHTMLRFSGHWebIM"
	
	# CID Only Dump
	echo "$contentID">>"$outputTextCID"
	
	# Cleanup Files
	rm "$outputJSON"
}

getinstallerName(){

	grep "filename=" "$outputJSON" | cut -f2 -d"=" | cut -f1 -d"&"

}

getOfferingName(){

	grep "filename=" "$outputJSON" | cut -f2 -d"&" | cut -c10-

}

getChannelName(){

	grep "filename=" "$outputJSON" | cut -f3 -d"&" | cut -c9-

}

createAmiDirName(){

	# Sample Full Path In games.json:
	# C:\\ProgramData\\activeMARK\\instant\\apps\\solitaire-cruisea1e9c2f474536a70\\solitairecruise.exe

	# Base Path: C:\\ProgramData\\activeMARK\\instant\\apps\\
	# First 16 Chars Name Dashes: solitaire-cruise
	# Firstt 16 Chars Content ID: a1e9c2f474536a70
	# Exe Name: \\solitairecruise.exe

	# Char Conversions Needed
	# ' = -

	# Dashes are not counted as part of the 16 chars but must be inserted as normal
	# There should never be a dash next to the start of the content id
	# BAD:  example-a-good-game-abcdef0123456789
	# GOOD: example-a-good-gameabcdef0123456789

	# Get first 16 chars of game name with and without dashes
	charsDashes=$(echo "$nameDashes" | cut -c1-16)
	charsNoDashes=$(echo "$nameNoDashes" | cut -c1-16)

	# Get last chars to make sure dashes name has right last char when done
	charsDashesLastChar=$(echo -n "$charsDashes" | tail -c 1)
	charsNoDashesLastChar=$(echo -n "$charsNoDashes" | tail -c 1)

	# Check number of dashes from 16 chars
	dashCount=$(echo "$charsDashes" | tr -cd '-' | wc -c)

	extraChars=$((16 + $dashCount + 1))

	# If the 16th char is a dash, add an extra 1 for extra chars
	case "$charsDashesLastChar" in

		"-")
		# Recut new chars with number of dashes being number to extend cut
		#echo "BAD: Dash at last char"
		extraChars=$((16 + $dashCount + 1))
		charsDashes=$(echo "$nameDashes" | cut -c1-$extraChars)
		charsDashesLastChar=$(echo -n "$charsDashes" | tail -c 1)
		dashCount=$(echo "$charsDashes" | tr -cd '-' | wc -c)
		;;

	esac

	charsDashes=$(echo "$nameDashes" | cut -c1-$extraChars)
	charsDashesNew=$(echo "$charsDashes" | tr -d '-')
	#charsDashesCount=$(echo "$charsDashesNew" | wc -c)

	# Compare original no dashes name to new name and remove extra chars
	case "$charsNoDashes" in
	
		"$charsDashesNew")
		#echo "charsDashesNew: Names Match"
		;;
	
		*)
		#echo "charsDashesNew: Fixing Name"
		charsDashes=$(echo "$charsDashes" | sed 's/.$//')
		charsDashesNew=$(echo "$charsDashesNew" | sed 's/.$//')
		;;

	esac

	# Get last char from new fixed name
	charsDashesNewLastChar=$(echo -n "$charsDashesNew" | tail -c 1)

	# Check for last char again to match no dashes name
	case "$charsNoDashesLastChar" in

		"$charsDashesNewLastChar")
		#echo "charsDashesNewLastChar: Characters Match"
		#echo ""
		;;

		*)
		echo "charsDashesNewLastChar: Last Characters DO NOT Match"
		echo ""
		;;

	esac

	# Debug Output
	#echo "extraChars: $extraChars"
	#echo "dashCount: $dashCount"
	#echo "charsNoDashes: $charsNoDashes"
	#echo "charsDashes:  $charsDashes"
	#echo "charsDashesNew:   $charsDashesNew"
	#echo "charsNoDashesLastChar: $charsNoDashesLastChar"
	#echo "charsDashesLastChar: $charsDashesLastChar"
	#echo "charsDashesNewLastChar: $charsDashesNewLastChar"

	# New fixed no dashes name
	nameDashesPart1="$charsDashes"
	
	# Get first 16 chars of content id
	cidPart1=$(echo "$contentID" | cut -c1-16)

	amiDirName="$nameDashesPart1$cidPart1"

	#echo "$amiDirBase$amiDirName\\\\"
	echo "amiDirName: $amiDirName"

	echo "$amiDirName">>"$dumpAmiPathName"

}


writeText(){

	# Char Conversions Needed
	# \ = '

	echo "">>"$dumpText"		
	echo "Game Entry #$gameCounter:">>"$dumpText"	
	echo "">>"$dumpText"
	echo "contentID: $contentID">>"$dumpText"
	echo "nameTitle: $nameTitle">>"$dumpText"
	echo "nameDashes: $nameDashes">>"$dumpText"
	echo "nameNoDashes: $nameNoDashes">>"$dumpText"
	echo "gamesetName: $gamesetName">>"$dumpText"
	echo "gamesetID: $gamesetID">>"$dumpText"
	echo "gameID: $gameID">>"$dumpText"
	echo "genreName: $genreName">>"$dumpText"
	echo "amiDirName: $amiDirName">>"$dumpText"
	echo ""	
}

writeIni(){

	echo "[$contentID]">>"$dumpIni"		
	echo "name_title=$nameTitle">>"$dumpIni"	
	echo "name_stub=$nameNoDashes">>"$dumpIni"	
	echo "name_web=$nameDashes">>"$dumpIni"	
	echo "installation_id=$na">>"$dumpIni"	
	echo "atoken=$na">>"$dumpIni"
	echo "ami_dir_name=$amiDirName">>"$dumpIni"
	echo "dmg_legacy=$na">>"$dumpIni"
	echo "dmg_gh=$na">>"$dumpIni"
	echo "dmg_amac=$na">>"$dumpIni"
	echo "rga_legacy=$na">>"$dumpIni"
	echo "rga_gh=$na">>"$dumpIni"
	echo "rga_am=$na">>"$dumpIni"
	echo "rga_amg=$na">>"$dumpIni"
	echo "rgs_free=$na">>"$dumpIni"
	echo "rgs_full=$na">>"$dumpIni"
	echo "rfs=$na">>"$dumpIni"
	echo "rfs_index=$na">>"$dumpIni"
	echo "">>"$dumpIni"

}


writeXML(){

	removeBadChars "xml"

	echo "<game>">>"$dumpXML"
	echo "<entry>$gameCounter</entry>">>"$dumpXML"
	echo "<game_id>$gameID</game_id>">>"$dumpXML"
	echo "<genre>$genreName</genre>">>"$dumpXML"
	echo "<name_title>$nameTitle</name_title>">>"$dumpXML"	
	echo "<name_stub>$nameNoDashes</name_stub>">>"$dumpXML"
	echo "<name_web>$nameDashes</name_web>">>"$dumpXML"
	echo "<gameset_name>$gamesetName</gameset_name>">>"$dumpXML"
	echo "<content_id>$contentID</content_id>">>"$dumpXML"
	echo "<gameset_id>$gamesetID</gameset_id>">>"$dumpXML"
	echo "<ami_dir_name>$amiDirName</ami_dir_name>">>"$dumpXML"
	echo "</game>">>"$dumpXML"
	echo "">>"$dumpXML"

}

removeBadChars(){

	case "$1" in
	
	"xml")
	nameTitle=$(echo $nameTitle | sed -r 's/[&]+/&amp;/g')
	;;

	"unicode")
	nameTitle=$(echo $nameTitle | sed 's/\\u00A2/c/') # CENT SIGN
	nameTitle=$(echo $nameTitle | sed 's/\\u00AE//') # REGISTERED SIGN
	nameTitle=$(echo $nameTitle | sed 's/\\u00E2/a/') # LATIN SMALL LETTER A WITH CIRCUMFLEX
	nameTitle=$(echo $nameTitle | sed 's/\\u2013/-/') # EN DASH
	nameTitle=$(echo $nameTitle | sed 's/\\u2019//') # RIGHT SINGLE QUOTATION MARK
	nameTitle=$(echo $nameTitle | sed 's/\\u201E//') # DOUBLE LOW-9 QUOTATION MARK
	nameTitle=$(echo $nameTitle | sed 's/\\u2122//') # TRADE MARK SIGN
	;;

	"backslash")
	nameTitle=$(echo $nameTitle | sed "s/\\\/\'/")
	;;

	esac

}

dumpPageToTemp(){

	#wget --header="Cookie: gamehouseuser=true" --header="User-Agent: RealArcade Wrapper Killer v6.0.0" -O "$outputTMP" "$1"
	wget --quiet --header="Cookie: gamehouseuser=true" --header="User-Agent: RealArcade Wrapper Killer v6.0.0" -O "$outputTMP" "$1"

}

readDataLayer(){

	grep "$1" "$outputTMP" | cut -f2 -d":" | cut -c2- | sed 's/,$//' | sed -e 's|["'\'']||g'

}

readContentID(){

	grep "contentid=" "$outputTMP" | cut -f3 -d"=" | cut -f1 -d"&"

}

readNameDashes(){

	grep "review-content-grp').load('/reviews/all/game/" "$outputTMP" | cut -f5 -d"/"

}

readNameNoDashes(){

	grep "review-content-grp').load('/reviews/all/game/" "$outputTMP" | cut -f5 -d"/" | sed -e 's|["'-']||g'

}


removeOldFiles
#dumpWebToJSON "all"
#dumpWebToJSON "online"
dumpWebToJSON "windows"
dumpGamesToList
dumpPages
#dumpPagesCidOnly


